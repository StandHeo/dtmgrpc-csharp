name: Build_And_IntegrationTests

on:
  push:
    branches: [ dev, main, 'feat/**' ]
  pull_request:
    branches: [ dev, main ]

jobs:

  linux:    
    name: build on ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    services:
      mysql:
        image: 'mysql:8'
        env:
          MYSQL_ROOT_PASSWORD: 123456
        command:
        [
          '--character-set-server=utf8mb4',
          '--collation-server=utf8mb4_unicode_ci',
          '--default-authentication-plugin=mysql_native_password',
        ]
        volumes:
          - /home/runner/work/dtmgrpc-csharp/dtmgrpc-csharp/sqls:/docker-entrypoint-initdb.d  
        ports:
          - 3306:3306
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 6.0.x 
    
    - name: Show dotnet Version
      run: |
        dotnet --list-sdks
        dotnet --list-runtimes

    - name: Setup DTM server
      run: |
        wget https://github.com/dtm-labs/dtm/releases/download/v1.12.1/dtm_1.12.1_linux_amd64.tar.gz
        tar -xvf dtm_1.12.1_linux_amd64.tar.gz
        pwd
        nohup ./dtm > dtm.log 2>&1 &
        sleep 5
        curl "127.0.0.1:36789/api/dtmsvr/newGid"   

    - name: Setup Busi Service
      run: |
        cd tests/BusiGrpcService
        nohup dotnet run > app.log 2>&1 &

    - name: Run Integration Tests
      run: |
        dotnet test tests/Dtmgrpc.IntegrationTests/Dtmgrpc.IntegrationTests.csproj

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: dtm-logs
        path: /home/runner/work/dtmgrpc-csharp/dtmgrpc-csharp/dtm.log    